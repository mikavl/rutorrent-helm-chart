## Instance layout (base paths)
method.insert = cfg.basedir,  private|const|string, (cat,"/data/")
method.insert = cfg.download, private|const|string, (cat,(cfg.basedir),"downloads/")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),"session/")

## Create instance directories
execute.throw = sh, -c, (cat,\
    "mkdir -p \"",(cfg.download),"\" ",\
    "\"",(cfg.session),"\" ")

network.port_range.set = 6882-6882
network.port_random.set = no

dht.mode.set = on
protocol.pex.set = yes
trackers.use_udp.set = yes

throttle.max_uploads.set = 1000
throttle.max_uploads.global.set = 1000

throttle.min_peers.normal.set = 50
throttle.max_peers.normal.set = 100
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1
trackers.numwant.set = 50

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

## Limits for file handle resources, this is optimized for
## an `ulimit` of 1024 (a common default). You MUST leave
## a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

## Memory resource usage (increase if you have a large number of items loaded,
## and/or the available resources to spend)
pieces.memory.max.set = 5000M
network.xmlrpc.size_limit.set = 4M

## Basic operational settings (no need to change these)
session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))

## Other operational settings (check & adapt)
encoding.add = UTF-8
system.umask.set = 0022
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 5

## Some additional values and commands
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
    "if=(d.is_multi_file),\
        (cat, (d.directory), /),\
        (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

## Run the rTorrent process as a daemon in the background
## (and control via XMLRPC sockets)
system.daemon.set = true
network.scgi.open_local = "/tmp/rtorrent/scgi.sock"
execute.nothrow = chmod,700,"/tmp/rtorrent/scgi.sock"

## Logging:
##   Levels = critical error warn notice info debug
##   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
log.open_file = "log", /dev/stdout
log.add_output = "info", "log"
#log.add_output = "tracker_debug", "log"
